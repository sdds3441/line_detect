import numpy as np
import cv2

#capl = cv2.VideoCapture(0,cv2.CAP_DSHOW)
capr = cv2.VideoCapture(1,cv2.CAP_DSHOW)
capr.set(3,1080)
capr.set(4,720)
capr.set(cv2.CAP_PROP_EXPOSURE,-10)
#capl.set(3,1080)
#capl.set(4,720)
#capl.set(cv2.CAP_PROP_EXPOSURE,-10)
#capr.set(15,-100)
#capr.set(11,100)
#capl.set(3,4096)
#capl.set(4,2160)

r_srcPoint = np.array([[300, 200], [400, 200], [500, 480], [200, 480]], dtype=np.float32)
r_dstPoint = np.array([[0, 0], [720, 0], [720, 480], [0, 480]], dtype=np.float32)

#l_srcPoint = np.array([[300, 200], [400, 200], [500, 500], [200, 500]], dtype=np.float32)
#l_dstPoint = np.array([[0, 0], [720, 0], [720, 480], [0, 480]], dtype=np.float32)
while (True):
    ret, framer = capr.read()
    #ret, framel = capl.read()
    #framer = cv2.resize(framer, (720, 480))
    #framel = cv2.resize(framel, (720, 480))
    #print(framer.shape)
    #cv2.line(framer, (512, 720), (512, 0), (0, 0, 255))
    cv2.circle(framer, (r_srcPoint[0][0], r_srcPoint[0][1]), 2, (0, 0, 255),-1)
    cv2.circle(framer, (r_srcPoint[1][0], r_srcPoint[1][1]), 2, (0, 0, 255),-1)
    cv2.circle(framer, (r_srcPoint[2][0], r_srcPoint[2][1]), 2, (0, 0, 255),-1)
    cv2.circle(framer, (r_srcPoint[3][0], r_srcPoint[3][1]), 2, (0, 0, 255),-1)
    #cv2.line(framel, (512, 720), (512, 0), (0, 0, 255))
    #cv2.circle(framel, (l_srcPoint[0][0], l_srcPoint[0][1]), 2, (0, 0, 255),-1)
    #cv2.circle(framel, (l_srcPoint[1][0], l_srcPoint[1][1]), 2, (0, 0, 255),-1)
    #cv2.circle(framel, (l_srcPoint[2][0], l_srcPoint[2][1]), 2, (0, 0, 255),-1)
    #cv2.circle(framel, (l_srcPoint[3][0], l_srcPoint[3][1]), 2, (0, 0, 255),-1)

    r_matrix = cv2.getPerspectiveTransform(r_srcPoint, r_dstPoint)
    r_dst = cv2.warpPerspective(framer, r_matrix, (720, 480))
    #l_matrix = cv2.getPerspectiveTransform(l_srcPoint, l_dstPoint)
    #l_dst = cv2.warpPerspective(framel, l_matrix, (720, 480))
    #cv2.imshow('lr', r_dst)
    cv2.imshow('r', framer)
    #cv2.imshow('l', framel)
    #height, width, channel = framel.shape
    #height, width, channel = framer.shape
    #matrixl = cv2.getRotationMatrix2D((width/2, height/2), 11, 1)
    #matrixr = cv2.getRotationMatrix2D((width/2, height/2), -8, 1)
    #dstl = cv2.warpAffine(framel, matrixl, (width, height))
    #dstr = cv2.warpAffine(framer, matrixr, (width, height))
   # print(framel)
    #framer = cv2.resize(framer, (1080, 720))
   # cv2.line(dstl, (1948,1),(1948,2160),(0,0,255),2)
    #cv2.line(dstr, (1948,1),(1948,2160),(0,0,255),2)
    cv2.imshow('r',framer)
    #dstr=cv2.resize(dstr,(1080,720))
    cv2.imshow('rdst',r_dst)
    cv2.imwrite('C:/Users/201921343/Desktop/right_images.jpg',framer)
    cv2.imwrite('C:/Users/201921343/Desktop/left_images.jpg',framel)
    cv2.waitKey(0)

